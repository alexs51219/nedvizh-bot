from pyrogram import Client, filters
from pyrogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove
from datetime import datetime
import pytz

user_data = {}

@app.on_message(filters.text("üè† –•–æ—á—É –∫—É–ø–∏—Ç—å"))
async def start_purchase(client, message):
    user_id = message.from_user.id
    user_data[user_id] = {}
    
    # –í–æ–ø—Ä–æ—Å 1: —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    reply_markup = ReplyKeyboardMarkup(
        [
            ["–ö–≤–∞—Ä—Ç–∏—Ä–∞", "–î–æ–º"],
            ["–î–∞—á–∞", "–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫"],
            ["–î—Ä—É–≥–æ–µ"]
        ], resize_keyboard=True, one_time_keyboard=True
    )
    await message.reply("üèòÔ∏è –ö–∞–∫–æ–π —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=reply_markup)
    app.register_next_step_handler(message, handle_property_type)

async def handle_property_type(message):
    user_id = message.from_user.id
    user_data[user_id]["–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"] = message.text

    if message.text == "–ö–≤–∞—Ä—Ç–∏—Ä–∞":
        reply_markup = ReplyKeyboardMarkup(
            [["–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞", "–í—Ç–æ—Ä–∏—á–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"]],
            resize_keyboard=True, one_time_keyboard=True
        )
        await message.reply("üèóÔ∏è –£—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø –∫–≤–∞—Ä—Ç–∏—Ä—ã:", reply_markup=reply_markup)
        app.register_next_step_handler(message, handle_flat_category)
    else:
        await message.reply("üèóÔ∏è –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è.")
