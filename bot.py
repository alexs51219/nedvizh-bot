from pyrogram import Client, filters
from pyrogram.types import ReplyKeyboardMarkup
import asyncio
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime
import pytz
import os

API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = 805696670

app = Client("bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        ["üè† –•–æ—á—É –∫—É–ø–∏—Ç—å", "üèòÔ∏è –•–æ—á—É –ø—Ä–æ–¥–∞—Ç—å"],
        ["‚ÑπÔ∏è –û–±–æ –º–Ω–µ"]
    ],
    resize_keyboard=True
)

buy_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        ["üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞ (–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞)", "üèòÔ∏è –ö–≤–∞—Ä—Ç–∏—Ä–∞ (–í—Ç–æ—Ä–∏—á–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å)"],
        ["üè† –î–æ–º", "üåø –î–∞—á–∞/–£—á–∞—Å—Ç–æ–∫"],
        ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]
    ],
    resize_keyboard=True
)

apartment_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        ["–°—Ç—É–¥–∏—è", "1–∫ (–ï-2)", "2–∫ (–ï-3)", "3–∫ (–ï-4)"],
        ["1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "3-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "4-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "5-–∫–æ–º–Ω–∞—Ç–Ω–∞—è"],
        ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]
    ],
    resize_keyboard=True
)

@app.on_message(filters.command("start"))
async def start(client, message):
    await message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –±—Ä–æ–∫–µ—Ä–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –°—É—Å–ª–æ–≤–∞ \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –¢—É–ª—ã 24/7\"!\n\n"
        "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é –¢—É–ª—ã. –í—ã –º–µ—á—Ç–∞–µ—Ç–µ ‚Äî –Ø –≤–æ–ø–ª–æ—â–∞—é! üí´",
        reply_markup=main_keyboard
    )

@app.on_message(filters.create(lambda _, m: m.text == "üè† –•–æ—á—É –∫—É–ø–∏—Ç—å"))
async def buy(client, message):
    await message.reply_text("–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?", reply_markup=buy_keyboard)

@app.on_message(filters.create(lambda _, m: m.text in ["üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞ (–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞)", "üèòÔ∏è –ö–≤–∞—Ä—Ç–∏—Ä–∞ (–í—Ç–æ—Ä–∏—á–Ω–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å)"]))
async def choose_apartment(client, message):
    await message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–≤–∞—Ä—Ç–∏—Ä—ã:", reply_markup=apartment_keyboard)

@app.on_message(filters.create(lambda _, m: m.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
async def back(client, message):
    await message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_keyboard)

@app.on_message(filters.create(lambda _, m: m.text == "‚ÑπÔ∏è –û–±–æ –º–Ω–µ"))
async def about(client, message):
    await message.reply_text(
        "üë®‚Äçüíº –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°—É—Å–ª–æ–≤\n"
        "üìç –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –¢—É–ª–µ\n"
        "üì± [–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π](https://tapy.me/upfyk8)",
        disable_web_page_preview=True
    )

# ----------- –ù–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ -----------

async def check_night_messages():
    moscow = pytz.timezone("Europe/Moscow")
    now = datetime.now(moscow)
    if 8 <= now.hour < 22:
        return  # –£—Ç—Ä–æ-–¥–µ–Ω—å, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º

    await app.send_message(ADMIN_ID, "üõèÔ∏è –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º: –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω.")

# ----------- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ -----------

async def main():
    scheduler = AsyncIOScheduler()
    scheduler.add_job(check_night_messages, "interval", hours=1)
    scheduler.start()
    await app.start()
    await idle()
    await app.stop()

from pyrogram.idle import idle
asyncio.run(main())
